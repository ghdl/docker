name: 'test'

on:
  push:
    paths:
      - 'run.sh'
      - '.github/workflows/test.yml'
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 5'

jobs:

  build:
    strategy:
      fail-fast: false
      matrix:
        include: [
          { distro: buster,   backend: mcode ,     args: "" },
          { distro: bullseye, backend: mcode ,     args: "" },
          { distro: bullseye, backend: mcode,      args: "--gplcompat" },
          { distro: bookworm, backend: mcode,      args: "--gplcompat" },
          { distro: ubuntu20, backend: mcode ,     args: "" },
          { distro: ubuntu22, backend: mcode ,     args: "" },
          { distro: fedora37, backend: mcode ,     args: "" },
          { distro: fedora38, backend: mcode ,     args: "" },
          { distro: bullseye, backend: llvm-11,     args: "" },
          { distro: ubuntu20, backend: llvm-10,    args: "" },
          { distro: ubuntu22, backend: llvm-11,    args: "" },
          { distro: fedora37, backend: llvm,       args: "" },
          { distro: fedora38, backend: llvm,       args: "" },
          { distro: bullseye, backend: gcc-9.4.0,  args: "" },
          { distro: fedora37, backend: gcc-10.3.0, args: "" },
          { distro: fedora38, backend: gcc-11.3.0, args: "" },
        ]
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v4

    - name: Clone ghdl
      run: git clone https://github.com/ghdl/ghdl

    - name: Build 'ghdl' and 'pkg' images
      run: ./run.sh -b $TARGS
      env:
        TASK: ${{ matrix.distro }}+${{ matrix.backend }}
        TARGS: ${{ matrix.args }}

    - name: 'Build ghdl/debug'
      # We need to use 'buster' because 'gnat-gps' is not available on 'bullseye' or 'bookworm'
      if: matrix.backend == 'mcode' && matrix.distro == 'buster'
      run: |
        docker build -t ghdl/debug - <<-EOF
        FROM ghdl/debug:base
        COPY --from=ghdl/pkg:buster-mcode / /ghdl/usr/local/
        EOF

    - name: Deploy to DockerHub
      if: github.event_name != 'pull_request' && github.repository == 'ghdl/docker'
      uses: pyTooling/Actions/with-post-step@r0
      with:
        main: |
          # Release
          echo '${{ secrets.DOCKER_PASS }}' | docker login docker.io -u '${{ secrets.DOCKER_USER }}' --password-stdin
          ./run.sh ""
        post: docker logout docker.io
