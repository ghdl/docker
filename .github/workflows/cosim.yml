name: 'cosim'

on:
  push:
    paths:
      - '.github/workflows/cosim.yml'
  workflow_dispatch:
  repository_dispatch:
    types: [ cosim ]
  schedule:
    - cron: '0 0 * * 5'

env:
  DOCKER_BUILDKIT: 1

jobs:


  base:
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        img: [ mcode, py, vunit-cocotb ]
    runs-on: ubuntu-latest
    env:
      IMG: ${{ matrix.img }}
    steps:

    - uses: actions/checkout@v4
      with:
        repository: ghdl/ghdl-cosim

    - name: Build image
      run: docker build -t ghdl/cosim:${IMG} - < docker/${IMG}.dockerfile

    - name: Deploy to DockerHub
      if: github.event_name != 'pull_request' && github.repository == 'ghdl/docker'
      uses: pyTooling/Actions/with-post-step@r0
      with:
        main: |
          # Release
          echo '${{ secrets.DOCKER_PASS }}' | docker login docker.io -u '${{ secrets.DOCKER_USER }}' --password-stdin
          docker push ghdl/cosim:${IMG}
        post: docker logout docker.io


  build:
    needs: base
    strategy:
      fail-fast: false
      matrix:
        img: [ matplotlib, xyce, octave ]
    runs-on: ubuntu-latest
    env:
      IMG: ${{ matrix.img }}
    steps:

    - uses: actions/checkout@v4
      with:
        repository: ghdl/ghdl-cosim

    - name: Build images
      run: |
        docker build -t ghdl/cosim:${IMG}-slim - < docker/${IMG}.dockerfile
        docker build -t ghdl/cosim:${IMG} --build-arg IMAGE="ghdl/cosim:${IMG}-slim" - < docker/vunit-cocotb.dockerfile

    - name: Deploy to DockerHub
      if: github.event_name != 'pull_request' && github.repository == 'ghdl/docker'
      uses: pyTooling/Actions/with-post-step@r0
      with:
        main: |
          # Release
          echo '${{ secrets.DOCKER_PASS }}' | docker login docker.io -u '${{ secrets.DOCKER_USER }}' --password-stdin
          docker push ghdl/cosim:${IMG}-slim
          docker push ghdl/cosim:${IMG}
        post: docker logout docker.io
